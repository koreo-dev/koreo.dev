apiVersion: koreo.realkinetic.com/v1beta1
kind: Workflow
metadata:
  name: aws-environment
spec:
  crdRef:
    apiGroup: acme.example.com
    kind: AcmeAwsEnvironment
    version: v1beta1
  configStep:
    label: config
    functionRef:
      kind: ValueFunction
      name: aws-environment-config
  steps:
  - label: metadata
    functionRef:
      kind: ValueFunction
      name: aws-environment-metadata
    inputs:
      config: =steps.config
  - label: resource_tags
    functionRef:
      kind: ValueFunction
      name: aws-environment-tags
    inputs:
      config: =steps.config
  - label: vpc
    condition:
      name: Environment VPC
      type: VPC
    functionRef:
      kind: ResourceFunction
      name: aws-environment-vpc
    inputs:
      metadata: =steps.metadata
      resource_tags: =steps.resource_tags
  - condition:
      name: Environment Internet Gateway
      type: InternetGateway
    functionRef:
      kind: ResourceFunction
      name: aws-environment-internet-gateway
    inputs:
      metadata: =steps.metadata
      resource_tags: =steps.resource_tags
      vpc: =steps.vpc
    label: internet_gateway
  - condition:
      name: Environment Public Route Table
      type: RouteTable
    functionRef:
      kind: ResourceFunction
      name: aws-environment-public-route-table
    inputs:
      internet_gateway: =steps.internet_gateway
      metadata: =steps.metadata
      resource_tags: =steps.resource_tags
      vpc: =steps.vpc
    label: public_route_table
  - condition:
      name: Environment Public Subnet
      type: PublicSubnet
    forEach:
      inputKey: subnet
      itemIn: =steps.config.vpc_public_subnets
    functionRef:
      kind: ResourceFunction
      name: aws-environment-public-subnet
    inputs:
      metadata: =steps.metadata
      public_route_table: =steps.public_route_table
      resource_tags: =steps.resource_tags
      subnet: =steps.config.vpc_public_subnets
      vpc: =steps.vpc
    label: public_subnets
  - condition:
      name: Environment Internet Gateway
      type: InternetGateway
    functionRef:
      kind: ResourceFunction
      name: aws-environment-elastic-ip
    inputs:
      metadata: =steps.metadata
      resource_tags: =steps.resource_tags
    label: elastic_ip
  - condition:
      name: Environment NAT Gateway
      type: NatGateway
    functionRef:
      kind: ResourceFunction
      name: aws-environment-nat-gateway
    inputs:
      elastic_ip: =steps.elastic_ip
      metadata: =steps.metadata
      public_subnet: =steps.public_subnets[0]
      resource_tags: =steps.resource_tags
    label: nat_gateway
  - condition:
      name: Environment Private Route Table
      type: RouteTable
    functionRef:
      kind: ResourceFunction
      name: aws-environment-private-route-table
    inputs:
      metadata: =steps.metadata
      nat_gateway: =steps.nat_gateway
      resource_tags: =steps.resource_tags
      vpc: =steps.vpc
    label: private_route_table
  - condition:
      name: Environment Private Subnet
      type: PrivateSubnet
    forEach:
      inputKey: subnet
      itemIn: =steps.config.vpc_private_subnets
    functionRef:
      kind: ResourceFunction
      name: aws-environment-private-subnet
    inputs:
      metadata: =steps.metadata
      private_route_table: =steps.private_route_table
      resource_tags: =steps.resource_tags
      vpc: =steps.vpc
    label: private_subnets
  - condition:
      name: Environment ECS Cluster Security Group
      type: SecurityGroup
    functionRef:
      kind: ResourceFunction
      name: aws-environment-ecs-security-group
    inputs:
      metadata: =steps.metadata
      resource_tags: =steps.resource_tags
      vpc: =steps.vpc
    label: ecs_security_group
  - condition:
      name: Environment ECS Cluster
      type: ECSCluster
    functionRef:
      kind: ResourceFunction
      name: aws-environment-ecs-cluster
    inputs:
      metadata: =steps.metadata
      resource_tags: =steps.resource_tags
    label: ecs_cluster
  - condition:
      name: Environment EC2 Launch Template
      type: LaunchTemplate
    functionRef:
      kind: ResourceFunction
      name: aws-environment-launch-template
    inputs:
      config: =steps.config
      ecs_security_group: =steps.ecs_security_group
      metadata: =steps.metadata
      resource_tags: =steps.resource_tags
      vpc: =steps.vpc
    label: launch_template
  - condition:
      name: Environment Auto Scaling Group
      type: AutoScalingGroup
    functionRef:
      kind: ResourceFunction
      name: aws-environment-autoscaling-group
    inputs:
      config: =steps.config
      launch_template: =steps.launch_template
      metadata: =steps.metadata
      private_subnets: =steps.private_subnets
    label: autoscaling_group
  - condition:
      name: Environment Capacity Provider
      type: CapacityProvider
    functionRef:
      kind: ResourceFunction
      name: aws-environment-capacity-provider
    inputs:
      auto_scaling_group: =steps.autoscaling_group
      config: =steps.config
      metadata: =steps.metadata
      resource_tags: =steps.resource_tags
    label: capacity_provider
  - functionRef:
      kind: ResourceFunction
      name: aws-environment-github-access-provider
    inputs:
      metadata: =steps.metadata
      resource_tags: =steps.resource_tags
    label: github_provider_access
  - functionRef:
      kind: ValueFunction
      name: aws-environment-output
    inputs:
      config: =steps.config
      ecs_cluster: =steps.ecs_cluster
      ecs_security_group: =steps.ecs_security_group
      github_provider_access: =steps.github_provider_access
      private_subnets: =steps.private_subnets
      vpc: =steps.vpc
    label: output
    state:
      output: =value
