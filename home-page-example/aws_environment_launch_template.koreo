apiVersion: koreo.dev/v1beta1
kind: ResourceFunction
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"koreo.dev/v1beta1","kind":"ResourceFunction","metadata":{"annotations":{},"name":"aws-environment-launch-template","namespace":"realkinetic-dev"},"spec":{"apiConfig":{"apiVersion":"aws.konfigurate.realkinetic.com/v1beta1","kind":"LaunchTemplate","name":"=inputs.metadata.name","namespace":"=inputs.metadata.namespace"},"create":{"delay":1},"locals":{"user_data_string":"=\"#!/bin/bash\\necho ECS_CLUSTER=\" + inputs.metadata.name + \" \u003e\u003e /etc/ecs/ecs.config;\"\n"},"postconditions":[{"assert":"=has(resource.status.state.aws.resourceId) \u0026\u0026 resource.status.state.aws.resourceId != \"\"","retry":{"delay":5,"message":"Waiting for launch template to become healthy"}}],"resource":{"metadata":"=inputs.metadata","spec":{"iamInstanceProfileArn":"=\"arn:aws:iam::\" + string(inputs.vpc.vpc_account_id) + \":instance-profile/ecsInstanceRole\"\n","imageId":"=inputs.config.auto_scaling_group.ami","instanceType":"=inputs.config.auto_scaling_group.instanceType","securityGroupIds":["=inputs.ecs_security_group.security_group_id"],"tags":"=inputs.resource_tags.tags","userData":"=b64encode(locals.user_data_string)"}},"return":{"template_id":"=resource.status.state.aws.resourceId","version_id":"=resource.status.state.aws.versionId"}}}
  creationTimestamp: "2025-02-10T19:53:13Z"
  generation: 1
  name: aws-environment-launch-template
  namespace: realkinetic-dev
  resourceVersion: "43370087"
  uid: 2f6a29c7-db0d-41d9-866c-c91c63f60a3a
spec:
  apiConfig:
    apiVersion: aws.konfigurate.realkinetic.com/v1beta1
    kind: LaunchTemplate
    name: =inputs.metadata.name
    namespace: =inputs.metadata.namespace
    namespaced: true
    owned: true
    readonly: false
  create:
    delay: 1
    enabled: true
  locals:
    user_data_string: |
      ="#!/bin/bash\necho ECS_CLUSTER=" + inputs.metadata.name + " >> /etc/ecs/ecs.config;"
  postconditions:
  - assert: =has(resource.status.state.aws.resourceId) && resource.status.state.aws.resourceId
      != ""
    retry:
      delay: 5
      message: Waiting for launch template to become healthy
  resource:
    metadata: =inputs.metadata
    spec:
      iamInstanceProfileArn: |
        ="arn:aws:iam::" + string(inputs.vpc.vpc_account_id) + ":instance-profile/ecsInstanceRole"
      imageId: =inputs.config.auto_scaling_group.ami
      instanceType: =inputs.config.auto_scaling_group.instanceType
      securityGroupIds:
      - =inputs.ecs_security_group.security_group_id
      tags: =inputs.resource_tags.tags
      userData: =b64encode(locals.user_data_string)
  return:
    template_id: =resource.status.state.aws.resourceId
    version_id: =resource.status.state.aws.versionId
  update:
    patch:
      delay: 30
